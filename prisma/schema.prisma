// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  productID       String     @id @default(uuid())
  productName     String
  description     String?
  category        String
  unitPrice       Decimal
  sellingPrice    Decimal
  quantityPerUnit Int
  inventory       Inventory?

  createdAt    DateTime       @default(now())
  OrderDetails OrderDetails[]
}

model Inventory {
  inventoryID     String @id @default(uuid())
  productID       String @unique
  quantity        Int
  reorderLevel    Int
  reorderQuantity Int

  createdAt DateTime @default(now())
  Product   Products @relation(fields: [productID], references: [productID])
}

model Orders {
  orderID        String   @id @default(uuid())
  orderDate      DateTime @default(now())
  discount       Decimal?
  total          Decimal
  paymentStatus  String
  receiptPrinted Boolean  @default(false)

  createdAt    DateTime       @default(now())
  OrderDetails OrderDetails[]
  Receipts     Receipts[]
}

model OrderDetails {
  orderDetailID String  @id @default(uuid())
  orderID       String
  productID     String
  quantity      Int
  unitPrice     Decimal

  createdAt DateTime @default(now())
  Order     Orders   @relation(fields: [orderID], references: [orderID])
  Product   Products @relation(fields: [productID], references: [productID])
}

model Receipts {
  receiptID     String   @id @default(uuid())
  orderID       String
  receiptDate   DateTime @default(now())
  receiptNumber String

  createdAt DateTime @default(now())
  Order     Orders   @relation(fields: [orderID], references: [orderID])
}

model Logs {
  logsID   String @id @default(uuid())
  action   String
  details  String @default("")
  location String
  userID   String

  createdAt DateTime @default(now())
}

model User {
  userID   String @id @default(uuid())
  username String
  password String

  createdAt DateTime @default(now())
}
